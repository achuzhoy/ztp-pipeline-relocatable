name: prueba
on:
  push:
    branches: [validation-spokes]

jobs:
  # ------------------------
  say_hello:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.generate-matrix.outputs.services }}
      versions: ${{ steps.generate-matrix.outputs.versions }}
    steps:
      
      - name: Generate Matrix
        id: generate-matrix
        run: |
          apt-get install yq -y
          cd examples
          i=0
          RESULT=$(yq eval ".spokes[$i]" config.yaml)
          while [ "${RESULT}" != "null" ]; do
            SPOKE_NAME=$(echo $RESULT | cut -d ":" -f 1)
            echo $SPOKE_NAME
            i=$((i + 1))
            RESULT=$(yq eval ".spokes[${i}]" ${SPOKES_FILE})
          done
          SERVICES=$RESULT
          echo $SERVICES
          echo ::set-output name=services::${SERVICES}
          VERSIONS=$RESULT
          echo $VERSIONS
          echo ::set-output name=versions::${VERSIONS}

  # ------------------------
  my_matrix:
    runs-on: ubuntu-latest
    needs:
      - say_hello
    strategy:
      matrix:
        service: ${{ fromJSON(needs.say_hello.outputs.services) }}
        version: ${{ fromJSON(needs.say_hello.outputs.versions) }}
    steps:
      - name: Matrix => (${{ matrix.service }} ${{ matrix.version}})
        run: |
          echo ${{ matrix.service }}
          echo ${{ matrix.version }}